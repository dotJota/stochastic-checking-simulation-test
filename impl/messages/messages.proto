syntax = "proto3";
package messages;
option go_package = "stochastic-checking-simulation/impl/messages";

message Started {}

message Simulate {}

message Ack {
  int64 sender = 1;
  int64 stamp = 2;
}

message BroadcastInstance {
  int64 author = 1;
  int64 seqNumber = 2;
}

message BrachaProtocolMessage {
  enum Stage {
    INITIAL = 0;
    ECHO = 1;
    READY = 2;
  }

  Stage stage = 1;
  int64 value = 2;
}

message ConsistentProtocolMessage {
  enum Stage {
    ECHO = 0;
    VERIFY = 1;
  }

  Stage stage = 1;
  int64 value = 2;
}

message ReliableProtocolMessage {
  enum Stage {
    NOTIFY = 0;
    ECHO_FROM_WITNESS = 1;
    ECHO_FROM_PROCESS = 2;
    READY_FROM_WITNESS = 3;
    READY_FROM_PROCESS = 4;
    VALIDATE = 5;
  }

  Stage stage = 1;
  int64 value = 2;
}

message RecoveryProtocolMessage {
  enum Stage {
    RECOVER = 0;
    REPLY = 1;
    ECHO = 2;
    READY = 3;
  }

  Stage stage = 1;
  ReliableProtocolMessage reliableProtocolMessage = 2;
}

message ScalableProtocolMessage {
  enum Stage {
    GOSSIP = 0;
    GOSSIP_SUBSCRIBE = 1;
    ECHO = 2;
    ECHO_SUBSCRIBE = 3;
    READY = 4;
    READY_SUBSCRIBE = 5;
  }

  Stage stage = 1;
  int64 value = 2;
}

message BroadcastInstanceMessage {
  BroadcastInstance broadcastInstance = 1;

  oneof message {
    BrachaProtocolMessage brachaProtocolMessage = 4;
    ConsistentProtocolMessage consistentProtocolMessage = 5;
    ReliableProtocolMessage reliableProtocolMessage = 6;
    RecoveryProtocolMessage recoveryProtocolMessage = 7;
    ScalableProtocolMessage scalableProtocolMessage = 8;
  }
}

message Message {
  int64 sender = 1;
  int64 stamp = 2;

  oneof content {
    Started started = 3;
    Simulate simulate = 4;
    BroadcastInstanceMessage broadcastInstanceMessage = 5;
  }
}
